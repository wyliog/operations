apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
    description: ""
  creationTimestamp: null
  generation: 1
  labels:
    appgroup: ""
  name: nginx
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/nginx
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        metrics.alpha.kubernetes.io/custom-endpoints: '[{"api":"","path":"","port":"","names":""}]'
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      affinity:
        nodeAffinity: {}
        podAffinity: {}
        podAntiAffinity: {}
      containers:
      - command:
        - nginx
        env:
        - name: PAAS_APP_NAME
          value: nginx
        - name: PAAS_NAMESPACE
          value: default
        - name: PAAS_PROJECT_ID
          value: 9919c22b78a64564b7218df61188830c
        - name: test
          value: test
        image: nginx:alpine-perl
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - nginx -t
          preStop:
            exec:
              command:
              - nginx -t
        livenessProbe:
          failureThreshold: 3
          httpGet:
            host: localhost
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        name: container-0
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: localhost
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
            nvidia.com/gpu: 10m
          requests:
            cpu: 250m
            memory: 512Mi
            nvidia.com/gpu: 10m
        securityContext:
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/emp
          name: vol-157638037073881815
          subPath: emt
        - mountPath: /opt/opt
          name: vol-157638033201263280
          subPath: opt
        - mountPath: /opt/secret
          name: vol-157638041325661235
          readOnly: true
          subPath: secret
      dnsConfig:
        options:
        - name: timeout
          value: ""
        - name: ndots
          value: "5"
        - name: single-request-reopen
      dnsPolicy: Default
      imagePullSecrets:
      - name: default-secret
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
      volumes:
      - hostPath:
          path: /opt
          type: ""
        name: vol-157638033201263280
      - emptyDir: {}
        name: vol-157638037073881815
      - name: vol-157638041325661235
        secret:
          defaultMode: 420
          items:
          - key: .dockerconfigjson
            path: .dockerconfigjson
          secretName: default-secret
status: {}
---------
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: nginx
  name: nginx
  selfLink: /api/v1/namespaces/default/services/nginx
spec:
  ports:
  - name: cce-service-0
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
